// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  transactionsLent    Transaction[] @relation("Lender")
  transactionsBorrowed Transaction[] @relation("Borrower")

  Account Account[] @relation("User")
}

model Account {
  userId        String   @db.Uuid @unique
  user User     @relation("User", fields: [userId], references: [id])
  balance Decimal @db.Money
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Transaction {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sender_id    String   @db.Uuid
  reciever_id  String   @db.Uuid
  amount      Decimal  @db.Decimal(10, 2)
  type        TransactionType
  status      Status   @default(PENDING)
  createdAt   DateTime @default(now())
  lender      User     @relation("Lender", fields: [sender_id], references: [id])
  borrower    User     @relation("Borrower", fields: [reciever_id], references: [id])
}

enum Status {
  PENDING
  SUCCESS
}

enum TransactionType {
  LEND
  REPAY
}


